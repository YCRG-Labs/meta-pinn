[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "meta-pinn"
version = "1.0.0"
description = "Meta-Learning Physics-Informed Neural Networks with Automated Physics Discovery (92.2% Validation Accuracy)"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Brandon Yee", email = "b.yee@ycrg-labs.org"},
    {name = "Wilson Collins", email = "w.collins@ycrg-labs.org"},
    {name = "Benjamin Pellegrini", email = "b.pellegrini@ycrg-labs.org"},
    {name = "Caden Wang", email = "cw3437@nyu.edu"}
]
maintainers = [
    {name = "Brandon Yee", email = "b.yee@ycrg-labs.org"}
]
keywords = [
    "machine-learning",
    "physics-informed-neural-networks",
    "meta-learning",
    "fluid-dynamics",
    "scientific-computing"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",

    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Physics",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=1.12.0",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "pyyaml>=6.0",
    "tqdm>=4.62.0",
    "tensorboard>=2.8.0",
    "wandb>=0.12.0",
    "hydra-core>=1.1.0",
    "omegaconf>=2.1.0",
    "sympy>=1.9.0",
    "networkx>=2.6.0",
    "openpyxl>=3.0.0",
    "psutil>=5.8.0",
    "fenics>=2019.1.0; sys_platform != 'win32'",
    "dolfinx>=0.5.0; sys_platform != 'win32'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-timeout>=2.1.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "flake8-docstrings>=1.7.0",
    "flake8-bugbear>=23.0.0",
    "flake8-comprehensions>=3.10.0",
    "flake8-simplify>=0.19.0",
    "mypy>=1.0.0",
    "bandit>=1.7.0",
    "pydocstyle>=6.3.0",
    "pre-commit>=3.0.0",
    "coverage>=7.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.22.0",
    "myst-parser>=1.0.0",
    "sphinx-autobuild>=2021.3.14",
    "nbsphinx>=0.9.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-timeout>=2.1.0",
    "pytest-mock>=3.10.0",
    "hypothesis>=6.70.0",
]
gpu = [
    "torch[cuda]>=1.12.0",
    "nvidia-ml-py>=11.0.0",
]
all = [
    "ml-research-pipeline[dev,docs,test,gpu]"
]

[tool.setuptools.package-data]
ml_research_pipeline = ["py.typed", "*.yaml", "*.yml", "*.json"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["ml_research_pipeline"]
known_third_party = [
    "torch",
    "numpy",
    "scipy",
    "matplotlib",
    "seaborn",
    "pandas",
    "sklearn",
    "yaml",
    "tqdm",
    "tensorboard",
    "wandb",
    "hydra",
    "omegaconf",
    "sympy",
    "networkx",
    "fenics",
    "dolfinx",
]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "fenics.*",
    "dolfinx.*",
    "matplotlib.*",
    "seaborn.*",
    "sklearn.*",
    "scipy.*",
    "networkx.*",
    "sympy.*",
    "wandb.*",
    "tensorboard.*",
]
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
source = ["ml_research_pipeline"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    "setup.py",
    "*/conftest.py",
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

# Bandit security linting configuration
[tool.bandit]
exclude_dirs = ["tests", "docs", "examples"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_process

# Pydocstyle configuration
[tool.pydocstyle]
convention = "google"
add_ignore = ["D100", "D104", "D105", "D107"]
match_dir = "^(?!tests|docs|examples).*"
